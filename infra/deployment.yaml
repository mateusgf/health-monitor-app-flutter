apiVersion: apps/v1
kind: Deployment
metadata:
  name: golang-backend
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: golang-backend
  template:
    metadata:
      labels:
        app: golang-backend
      annotations:
        azure.workload.identity/use: "true"
    spec:
      serviceAccountName: golang-backend-sa
      volumes:
        - name: secrets-store
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "azure-keyvault-secrets"
      containers:
        - name: golang-backend
          image: ${CONTAINER_IMAGE}
          ports:
            - containerPort: 8081
          volumeMounts:
            - name: secrets-store
              mountPath: "/mnt/secrets-store"
              readOnly: true
          env:
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: azure-keyvault-secrets
                  key: tf-managed-db-user
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: azure-keyvault-secrets
                  key: tf-managed-db-admin-password
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: azure-keyvault-secrets
                  key: tf-managed-db-host
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: azure-keyvault-secrets
                  key: tf-managed-db-name

---
apiVersion: v1
kind: Service
metadata:
  name: golang-backend-service
spec:
  type: LoadBalancer
  selector:
    app: golang-backend
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8081
